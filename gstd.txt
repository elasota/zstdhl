Gstd follows the high-level structure of the Zstandard format.

BITSTREAM INTERLEAVING

Gstd streams are split into 32 parallel bitstreams that are always read from
the low bits first.  The bitstreams are broken into 32-bit chunks which are
conditionally refilled at specified refill points.

At a refill point, all bitstreams are checked to see if their bit count is
less than 32.  If it is, then they are consecutively loaded from the stream
data and any new bits are added to the high bits.

There is also a separate byte-aligned stream known as the "control stream"
which is used to store uncompressed values and headers.


BLOCK HEADERS

Block headers are stored as 32-bit control words.

The format for a block is:
	Bits 0-19: Decompressed size
	Bits 20-21: Block type
	Bit 22-23: Flags
	Bits 24-31: Aux byte

For RLE blocks, the aux byte encodes the byte to be repeated for the decompressed size
For raw blocks, the aux byte encodes the first byte
For compressed blocks:
	Bits 24-25: Literal block type
	Bits 26-27: Literals length table mode
	Bits 28-29: Offset mode
	Bits 30-31: Match length mode

TODO: Describe control word stream.


FSE TABLE ENCODING

FSE tables do not have a special less-than-one probability as they do in Zstd.

The baseline and bit consumption of each symbol is based on the order that the
entries are inserted into the table instead of the order that the entries
exist in the table.


HUFFMAN CODES

Huffman codes are least-significant-bit first and are bit-inverted from what
they would be in Zstandard.

TODO: Describe Huffman code algorithm.


FSE STATE CHAINING

Gstd's decoder maintains a single state value for all FSE decoding despite
using tables of different sizes.  To accomodate this, when transitioning to
other FSE states, the low bits corresponding to the table precision are
updated and any bits above the ones that are updated are left alone.

Additionally, if a Huffman weight table is FSE encoded, the final state value
is used for further sequence decoding.


FSE REPLENISHMENT RULES

All FSE decoder states begin in a "drained" state with an initial state of 0
and a replenish count of 9.  Any time an FSE value is requested the decoder
must perform the following actions:
- Load as many bits as are required by the stream drain level.
- Add the bits to the current state value.
- Use the state value to determine the symbol from the FSE table.
- Replace the FSE state with the new baseline and the drain level to the
  number of bits in the FSE table entry.

This means that the final symbol to be decoded will not read any additional
bits.
